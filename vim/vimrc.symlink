"""" Don't load autocmds twice
autocmd!
map <F5> :wall!<CR>:!sbcl --load foo.cl<CR><CR>

"""" VUNDLE
set nocompatible      
filetype off           
set rtp+=~/.vim/bundle/Vundle.vim
call vundle#begin()

Plugin 'gmarik/Vundle.vim'
Plugin 'ctrlpvim/ctrlp.vim'   " Finder - https://github.com/ctrlpvim/ctrlp.vim
Plugin 'tpope/vim-fugitive'   " Git controls - https://github.com/tpope/vim-fugitive
Plugin 'preservim/nerdtree'   " File explorer 
Plugin 'ryanoasis/vim-devicons' " Nerd Tree Icons
Plugin 'tiagofumo/vim-nerdtree-syntax-highlight'
Plugin 'dense-analysis/ale'
Plugin 'morhetz/gruvbox'      " Theme 
Plugin 'tpope/vim-commentary'  " Commenting things out
Plugin 'jlcrochet/vim-ruby'   
Plugin 'tpope/vim-rails'
Plugin 'vim-scripts/Align'
Plugin 'mileszs/ack.vim'

" All of your Plugins must be added before the following line
call vundle#end()


"""" CTRLP
let g:ctrlp_working_path_mode = 'ra'
let g:ctrlp_user_command = ['.git/', 'git --git-dir=%s/.git ls-files -oc --exclude-standard']
nnoremap <leader>. :CtrlPTag<cr>

"""" NERDTREE
map <silent> HH :NERDTreeToggle<cr>
autocmd VimEnter * NERDTree " Start NERDTree and leave the cursor in it.

" If another buffer tries to replace NERDTree, put it in the other window, and bring back NERDTree.
autocmd BufEnter * if bufname('#') =~ 'NERD_tree_\d\+' && bufname('%') !~ 'NERD_tree_\d\+' && winnr('$') > 1 |
    \ let buf=bufnr() | buffer# | execute "normal! \<C-W>w" | execute 'buffer'.buf | endif

"use goimports for formatting
let g:go_fmt_command = "goimports"
let g:go_highlight_functions = 1
let g:go_highlight_methods = 1
let g:go_highlight_structs = 1
let g:go_highlight_operators = 1
let g:go_highlight_build_constraints = 1

" Open go doc in vertical window, horizontal, or tab
au Filetype go nnoremap <leader>v :vsp <CR>:exe "GoDef" <CR>
au Filetype go nnoremap <leader>s :sp <CR>:exe "GoDef"<CR>
au Filetype go nnoremap <leader>t :tab split <CR>:exe "GoDef"<CR>

au BufRead,BufNewFile *.md setlocal textwidth=80

au BufNewFile,BufRead *.py 
set tabstop=4 
set softtabstop=4 
set shiftwidth=4 
set textwidth=79 
set expandtab 
set autoindent 
set fileformat=unix

au BufNewFile,BufRead *.js, *.html, *.css
set tabstop=2
set softtabstop=2
set shiftwidth=2

let g:syntastic_ruby_checkers = ['jruby', 'mri', 'rubocop' ]

"""" Color Scheme 
syntax on
set background=dark
let g:gruvbox_italic=1
autocmd vimenter * ++nested colorscheme gruvbox

"""" Vim Ruby
filetype indent on    " Enable filetype-specific indenting
filetype plugin on    " Enable filetype-specific plugins

autocmd FileType ruby compiler ruby
"""" Vim Fugtive
set statusline+=%{fugitive#statusline()}

"""" Vim AG
let g:ag_working_path_mode="r"

"""" Vim Ruby

"""" Basic Settings
set nowrap
set autoindent
set cmdheight=1
set nocursorline " highlight current line
set norelativenumber
set expandtab
set hidden         " remember more commands and search history
set history=1000
set hlsearch 
set ignorecase smartcase	" make searches case-sensitive only if they contain upper-case characters
set incsearch
set laststatus=2
set number
set shiftwidth=2
set showmatch
set softtabstop=2
set switchbuf=useopen
set tabstop=2
set winwidth=79
set undolevels=1000
set title
set ts=2
set backspace=2

" format the entire file
nnoremap <leader>fef :normal! gg=G``<CR>
noremap <F3> :Autoformat<CR><CR>
noremap <silent> <Tab> :wincmd w<cr>

set colorcolumn=120
let mapleader = ","
nnoremap <leader>ev :vsplit ~/.dotfiles/vim/vimrc.symlink<cr>
inoremap jk <esc>
nnoremap <leader><leader> <c-^>

" change cursor in insert mode
let &t_SI = "\<Esc>]50;CursorShape=1\x7"
let &t_SR = "\<Esc>]50;CursorShape=2\x7"
let &t_EI = "\<Esc>]50;CursorShape=0\x7"

au FileType go nmap <leader>r <Plug>(go-run)
au FileType go nmap <leader>b <Plug>(go-build)
au FileType go nmap <leader>t <Plug>(go-test)
au FileType go nmap <leader>c <Plug>(go-coverage)

